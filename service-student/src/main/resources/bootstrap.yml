spring:
  application:
    name: college-service-student
  zipkin:
    baseUrl: http://localhost:9411
    enabled: true
  sleuth:
    sampler:
      rate: 1
  servlet:
    multipart:
      max-file-size: 500
      max-request-size: 500

server:
  port: 8583
  servlet:
    context-path: /

# Eureka
eureka:
  instance:
    # 是否用ip注册
    prefer-ip-address: false
    # 实例id
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
    # 服务调用的ip地址
    ip-address: ${spring.cloud.client.ip-address}
    # 重定义/actuator，处理context-path
    health-check-url: http://${spring.cloud.client.ip-address}:${server.port}${server.servlet.context-path:}/actuator/health
    status-page-url: http://${spring.cloud.client.ip-address}:${server.port}${server.servlet.context-path:}/actuator/info
    home-page-url: http://${spring.cloud.client.ip-address}:${server.port}${server.servlet.context-path:}/
  client:
    #刷新本地服务列表 默认30s
    registry-fetch-interval-seconds: 5
    serviceUrl:
      defaultZone: http://localhost:8571/eureka/

# sleuth只能收集DEBUG级别日志（这里定义了收集日志的范围）
logging:
  level:
    org:
      springframework:
        web:
          servlet:
            DispatcherServlet: debug


# 从Eureka中找到Config服务并读取配置
#spring:
#  application:
#    # 配置名称, 注意顺序：后面配置的相同内容部分会替换前面的配置
#    # common_*要排在前面
#    name: common_db, common_bbc, core_order
#  # 允许覆盖Bean实例
#  main:
#    allow-bean-definition-overriding: true
#  cloud:
#    config:
#      discovery:
#        enabled: true
#        service-id: xybbc-config-server
#      label: local
#      profile: dev
#      retry:
#        initial-interval: 1000
#        max-attempts: 6
#        max-interval: 2000
#        multiplier: 1.1

#  HystrixCommandProperties
feign:
  hystrix:
    enabled: true
