server:
  port: 8202
  servlet:
    context-path: /ribbon


spring:
  application:
    name: college.springcloud.service-ribbon

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8571/eureka/


college-service-student:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.ZoneAvoidanceRule

ribbon:
#  连接超时主要针对网络抖动或者某个服务响应特别慢的情况
  #如果服务体量上去之后，最好设置为1秒
  ConnectTimeout: 30000
  ReadTimeOut: 30000
  # RibbonProperties  失败重试，无论是超时还是失败
  OkToRetryOnAllOperations: true
  #同一实例最大重试次数，不包括首次调用
  MaxAutoRetries: 1
  #重试其他实例最大重试次数，不包括首次所选的server
  MaxAutoRetriesNextServer: 1

  eager-load:
    #默认false 饥饿加载。主要解决第一远程调用，如果超时时间设置比较短，导致的错误。
    #主要是Ribbon进行客户端负载均衡的Client并不是在服务启动的时候就初始化好的，
    #而是在调用的时候才会去创建相应的Client，所以第一次调用的耗时不仅仅包含发送HTTP请求的时间，
    #还包含了创建RibbonClient的时间，这样一来如果创建时间速度较慢，同时设置的超时时间又比较短的话，
    #很容易就会出现上面所描述的显现。
    enabled: false
    #需要拉去的服务列表
    clients:
    #默认的请求发起是：HttpURLConnection，true：意思是：改成：HttpClinet.
    #ribbon.okhttp.enabled: true ,true:改成OKHttpClient。

  http:
    client:
      enabled: false
